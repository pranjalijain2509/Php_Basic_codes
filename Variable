<!DOCTYPE html>
<html>
<body>
<?php
//Variables are "containers" for storing information.
//In PHP, a variable starts with the $ sign, followed by the name of the variable:
$txt = "Hello world!";
$x = 5;
$y = 10.5;
// the variable $txt will hold the value Hello world!, the variable $x will hold the value 5, and the variable $y will hold the value 10.5.

//Note: When you assign a text value to a variable, put quotes around the value.
//A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).

//Rules for PHP variables:
//A variable starts with the $ sign, followed by the name of the variable
// A variable name must start with a letter or the underscore character
// A variable name cannot start with a number
// A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
// Variable names are case-sensitive ($age and $AGE are two different variables)

//The following example will show how to output text and a variable
$txt1 = "W3Schools.com";
echo "I love $txt1!";
Output-I love W3Schools.com!
echo "<br>";

$txt = "W3Schools.com";
echo "I love " . $txt1 . "!";
Output-I love W3Schools.com!
echo "<br>";

$x = 5;
$y = 4;
echo $x + $y;
Output-9

$txt2 = "W3";

echo "<br>";
echo "<h2> $txt1 </h2>";
echo "Study PHP at  $txt2 <br>";
echo 'Study PHP at  $txt2 <br>';
echo "hey".$x . $y;
echo "<br>";
echo "hey" . ($x+$y);

Output-
W3Schools.com
Study PHP at W3
Study PHP at $txt2
hey54
hey9

//PHP automatically associates a data type to the variable, depending on its value. Since the data types are not set in a strict sense, you can do things like adding a string to an integer without causing an error.
//In PHP 7, type declarations were added. This gives an option to specify the data type expected when declaring a function, and by enabling the strict requirement, it will throw a "Fatal Error" on a type mismatch.
?>  
</body>
</html>
